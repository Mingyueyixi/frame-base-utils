apply {
    plugin 'maven-publish'
}
tasks.withType(PublishToMavenRepository) {
    it.dependsOn lint, test
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}
//task generateSourcesJar(type: Jar) {
//    from android.sourceSets.main.java.srcDirs
//    classifier 'sources'
//}

afterEvaluate {
    publishing {
//        repositories {
//            maven {
//                url = findProperty('mavenRepo') ?: "${buildDir}/repo"
//            }
//        }
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release // 表示发布 release（jitpack 都不会使用到）
                // You can then customize attributes of the publication as shown below.
                groupId = 'com.lu.magic.frameutil' // 这个是依赖库的组 id
                // 依赖库的名称（jitpack 发布时使用的是github项目/模块名称，但多个子模块发布时，maven需要区分产物，否则就覆盖了）
                artifactId = project.ext.find('releaseArtifactId') ?: project.name
                println("$artifactId publishing................")
                version = releaseVersion

                pom {
                    licenses {
                        license {
                            name = 'MulanPSL2'
                            url = 'http://license.coscl.org.cn/MulanPSL2'
                            distribution = 'repo'
                        }
                    }
                    developers {
                        developer {
                            name = 'Lu'
                        }
                    }
                    scm {
                        connection = 'scm:git:https://github.com/Mingyueyixi/frame-base-utils'
                        url = 'https://github.com/Mingyueyixi/frame-base-utils'
                    }
                }
            }
        }
    }
}
